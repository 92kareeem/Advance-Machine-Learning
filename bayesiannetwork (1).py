# -*- coding: utf-8 -*-
"""BayesianNetwork.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1pJze2ArXyp6z73RDaLkNjpow_Epuhn3E
"""

import pandas as pd

# Step 1: Create the dataset
data = pd.DataFrame({
    'Age': ['young', 'young', 'young', 'young', 'young', 'middle', 'middle', 'middle', 'middle', 'old', 'old', 'old', 'old', 'old'],
    'Gender': ['male', 'male', 'female', 'female', 'female', 'male', 'male', 'female', 'female', 'male', 'male', 'male', 'female', 'female'],
    'Cholesterol': ['high', 'high', 'high', 'normal', 'normal', 'high', 'normal', 'normal', 'normal', 'high', 'normal', 'normal', 'normal', 'high'],
    'HeartDisease': ['yes', 'yes', 'no', 'no', 'no', 'yes', 'no', 'no', 'no', 'yes', 'yes', 'no', 'no', 'yes']
})

# Step 2: Save to CSV
data.to_csv('heart_disease_data.csv', index=False)

# Step 3: Load the dataset from the CSV file
data = pd.read_csv('heart_disease_data.csv')

# Step 4: Print the first few records from the dataset
print(data.head())

#!pip install pgmpy

#Constructing Bayesian Network
import pandas as pd
from pgmpy.models import BayesianNetwork
from pgmpy.estimators import MaximumLikelihoodEstimator
from pgmpy.inference import VariableElimination
data=pd.read_csv('heart_disease_data.csv')
dataset=pd.DataFrame(data)
print(dataset)
print(data.head())

model = BayesianNetwork([
    ('Age', 'HeartDisease'),
    ('Gender', 'HeartDisease'),
    ('Cholesterol', 'HeartDisease')
])
model.fit(data, estimator=MaximumLikelihoodEstimator)
inference = VariableElimination(model)

query_result = inference.query(variables=['HeartDisease'],
                    evidence={'Age': 'middle', 'Gender': 'male', 'Cholesterol': 'high'})
print(query_result)
query_result = inference.query(variables=['HeartDisease'],
                    evidence={'Age': 'middle', 'Gender': 'female', 'Cholesterol': 'normal'})
print(query_result)

import networkx as nx

model = BayesianNetwork([
    ('Age', 'Gender'),
    ('Gender', 'HeartDisease'),
    ('Cholesterol', 'HeartDisease')
])

G = nx.DiGraph()
G.add_nodes_from(model.nodes())
G.add_edges_from(model.edges())

nx.draw_networkx(G, with_labels=True)

